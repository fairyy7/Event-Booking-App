"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDevices = getDevices;
function _execa() {
  const data = _interopRequireDefault(require("execa"));
  _execa = function () {
    return data;
  };
  return data;
}
function _cliTools() {
  const data = require("@react-native-community/cli-tools");
  _cliTools = function () {
    return data;
  };
  return data;
}
var _parseIOSDevicesList = _interopRequireDefault(require("./parseIOSDevicesList"));
var _parseXctraceIOSDevicesList = _interopRequireDefault(require("./parseXctraceIOSDevicesList"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function getDevices() {
  let devices;
  try {
    const out = _execa().default.sync('xcrun', ['xctrace', 'list', 'devices']);
    devices = (0, _parseXctraceIOSDevicesList.default)(
    // Xcode 12.5 introduced a change to output the list to stdout instead of stderr
    out.stderr === '' ? out.stdout : out.stderr);
  } catch (e) {
    _cliTools().logger.warn('Support for Xcode 11 and older is deprecated. Please upgrade to Xcode 12.');
    devices = (0, _parseIOSDevicesList.default)(_execa().default.sync('xcrun', ['instruments', '-s']).stdout);
  }
  return devices;
}

//# sourceMappingURL=getDevices.js.map